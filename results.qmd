# Results
```{r, echo = FALSE, message = FALSE, warning = FALSE, cache = FALSE, fig.width = 30, fig.height = 10}
# Load required packages
if (!require("fmsb")) install.packages("fmsb")
if (!require("tidyverse")) install.packages("tidyverse")
if (!require("ggplot2")) install.packages("ggplot2")
if (!require("viridis")) install.packages("viridis")
if (!require("reshape2")) install.packages("reshape2")
if (!require("readxl")) install.packages("readxl")
if (!require("corrplot")) install.packages("corrplot")

# Load the Excel file
library(readxl)
library(dplyr)
library(tidyverse)

# Load the data from the sheet
data <- read_csv("./data/hiv.csv")
data[data=='-'] <- NA
#Replace the NA values with 0's
for(column_name in names(data)) {
  data[[column_name]][is.na(data[[column_name]])] <- 0
}

```

## Analysis of Overweight Percentages in 2020


```{r, echo = FALSE, message = FALSE, warning = FALSE, cache = FALSE}
library(ggplot2)
library(dplyr)
library(readr)
library(tidyverse)

# Load the data
nutrition_data <- read_csv("./data/Nutrition.csv")

# Clean the column names to remove excess periods and line breaks
colnames(nutrition_data) <- gsub("\\.\\n|\\.{2,}", "", colnames(nutrition_data))
colnames(nutrition_data) <- gsub("\\s+", " ", colnames(nutrition_data))

# Convert 'Overweight (%) (2020)' to numeric, remove NAs
nutrition_data <- nutrition_data %>%
  mutate(Overweight_2020 = as.numeric(`Overweight (%) (2020)`)) %>%
  drop_na(Overweight_2020) %>%
  arrange(desc(Overweight_2020))

# Calculate the number of rows for the top 10%
top_10_percent_rows <- round(nrow(nutrition_data) * 0.1)

# Get the top 10% of the data
top_10_percent <- nutrition_data %>%
  slice_max(order_by = Overweight_2020, n = top_10_percent_rows)

# Create the bar chart with different colors for each country
ggplot(top_10_percent, aes(x = reorder(`Countries and areas`, Overweight_2020), y = Overweight_2020, fill = `Countries and areas`)) +
  geom_bar(stat = "identity") +
  scale_fill_viridis_d() +  # Use Viridis color scale for distinct colors
  coord_flip() +  # Flip coordinates for a horizontal bar chart
  labs(x = "Countries", y = "Overweight (%)", title = "Top 10% Overweight Percentage by Country in 2020") +
  theme_minimal() +
  theme(axis.text.y = element_text(angle = 45, hjust = 1), legend.position = "none")  # Adjust the text angle for country names and remove legend


```

The bar chart above illustrates the top 10% of countries with the highest percentages of overweight individuals in the year 2020. This visualization helps in identifying the countries that are facing the most significant challenges related to overweight populations. Notably, Libya tops the chart, followed by Lebanon and Australia, indicating a need for targeted public health interventions in these areas. The variation in color for each country enhances the chart's readability and allows for quick comparison across the countries listed. Such data is crucial for policymakers and health professionals who are working to combat obesity and promote healthier lifestyles.



## Bar Chart (Incidence Rates in Children (0-14))
```{r, echo = FALSE, message = FALSE, warning = FALSE, cache = FALSE}
data$inciChildren0to14 <- as.numeric(data$inciChildren0to14)
filtered_data <- data %>% 
  filter(inciChildren0to14 > 1)
ggplot(filtered_data, aes(x = Countries, y = inciChildren0to14)) +
  geom_bar(stat = "identity", fill = 'cornflowerblue', color = 'black') +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  labs(title = "HIV Incidence Rates in Children (0-14) per 1000", x = "Country", y = "Incidence Rate")
```
This chart is a bar graph that displays the HIV incidence rates in children aged 0-14 across various countries. Each bar represents a different country, and the height of the bar indicates the incidence rate. The countries listed are Cameroon, Congo, Equatorial Guinea, Eswatini, Gabon, Guinea-Bissau, Lesotho, Malawi, Namibia, Sierra Leone, South Africa, South Sudan, Zambia, and Zimbabwe. The X-axis represents countries and the Y-axis represents the incident rates in these countries. The graph is specifically plotted for countries with more than 1000 incidents to know exactly which countries we need to focus our attention on. The highest number of incidents of HIV are reported in Eswatini, Lesotho, and Zimbabwe. 

## Histogram (Distribution of Mortality Rates in Adoloscents(10-19))
```{r, echo = FALSE, message = FALSE, warning = FALSE, cache = FALSE}

data$mortAdolescents10to19 <- as.numeric(data$mortAdolescents10to19)

sorted_data <- data %>% 
  arrange(desc(mortAdolescents10to19))

ggplot(data, aes(x = mortAdolescents10to19)) + 
  geom_histogram(binwidth = 2, fill = "cornflowerblue", color = "black") + 
  labs(title = "Distribution of HIV Mortality Rates in Adolescents(10-19)")
```

This chart is a histogram that represents the distribution of the mortality rates of adolescents in the age range of (10-19) per 100,000 of the entire population. From the graph itself it is quite evident that the distribution is extremely positively skewed. This means that most of the adolescents have extremely low mortality rates but the extended right tail that there are quite a few outliers and there is evidence of the existence of a few adolescents with a high mortality rate. Although, these adolescents are quite rare.

```{r, echo = FALSE, message = FALSE, warning = FALSE, cache = FALSE}

# Load demographics data
data_demo <- read_csv("./data/Demographics.csv")
data_demo[data_demo == '-'] <- NA
#Replace the NA values with 0's
for(column_name in names(data_demo)) {
  data[[column_name]][is.na(data_demo[[column_name]])] <- 0
}
```

## Scatter Plot for Life Expectancy and Annual Population Growth (2020-2030)
```{r, echo = FALSE, message = FALSE, warning = FALSE, cache = FALSE}
library(ggplot2)
library(plotly)

data_demo$LifeExp2021 <- as.numeric(data_demo$LifeExp2021)
data_demo$AnnPopGrow2020to2030 <- as.numeric(data_demo$AnnPopGrow2020to2030)

p <- ggplot(data_demo, aes(x = LifeExp2021, y = AnnPopGrow2020to2030)) + 
  geom_point(aes(color = Countries))+
  labs(title = "Life Expectancy vs Annual Population Growth (2020-2030)",
       x = "Life Expectancy",
       y = "Annual Population Growth(2020-2030)") +
  theme_minimal()

ggplotly(p, tooltip = "text")

```

This is a scatter plot between the Life Expectancy and the Annual Population Growth in the years (2020 - 2030). Using this graph we can easily track the growths of concerned countries and the life expectancy by simply toggling the countries on the graph. The Annual Population Growth (2020-2030) is highest for Niger with a >60 years of life expectancy. We need to keep those countries under supervision that have their annual population growth rate lower than 0% since they could be prone to someone diseases that might leading to the negative Annual Population Growth Rate. Whereas, we also need to observe the countries with an extremely high life expectancy and a high annual population growth rate.


## Heatmap for showing correlation


```{r, echo = FALSE, message = FALSE, warning = FALSE, cache = FALSE}
library(corrplot)

numerical_cols <- c('AnnPopGrow2000to2020', 'AnnPopGrow2020to2030', 'LifeExp2021', 
                     'TotFert', 'TotDepRatio', 'ShareUrbanPop', 'NetMigRate')
data_demo[numerical_cols] <- lapply(data_demo[numerical_cols], as.numeric)

corr_matrix <- cor(data_demo[numerical_cols], use = 'complete.obs')

corrplot(corr_matrix, method='color', tl.col="black", type = "upper", tl.srt = 45)

```

This is a Heatmap that helps us identify the correlation between the various variables we are concerned with for this study. Using this heatmap we can find out which variables are highly dependent on each other so while making policies we can choose the factors that we want to focus on in manner that it can positively affect the other factors. The color on the redder side shows that they are not correlated and changing one might not affect the other or might prove to be counterproductive when making governmental policies with respect to the demographics of a country.

## Line Chart for Life Expectancy in 2021 for the top 10 Countries

```{r, echo = FALSE, message = FALSE, warning = FALSE, cache = FALSE}
library(ggplot2)
library(dplyr)
data_demo$LifeExp2021 <- as.numeric(data_demo$LifeExp2021)

top_countries <- data_demo %>%
  top_n(10, LifeExp2021) %>%
  arrange(LifeExp2021)

ggplot(top_countries, aes(x = reorder(Countries, LifeExp2021), y = LifeExp2021, group=1 ))+
  geom_line() + 
  geom_point() + 
  labs(title = "Life Expentacy in 2021 for the top 10 Countries",
       x = "Countries",
       y = "Life Expectancy in 2021") + 
  theme_minimal()+
  coord_flip()
  
```

This graph is a horizontal line plot that shows the life expectancy in 2021 for the top 10 countries. The countries are listed on the y-axis, and they include, from top to bottom, Monaco, Japan, Australia, Switzerland, Republic of Korea, Malta, Sweden, Spain, Singapore, and Norway. The x-axis represents life expectancy in years and ranges from 83 to 86 years. The title "Life Expectancy in 2021 for the top 10 Countries" suggests that the data points represent the average number of years a person born in 2021 in each of these countries would be expected to live, assuming that current mortality rates at each age remain constant throughout their lifetime. Based on the Line Chart, the top 3 countries with the highest life expectancies are - Monaco, Japan, and Australia.

## Pie Chart for Population Breakdown
```{r, echo = FALSE, message = FALSE, warning = FALSE, cache = FALSE}
library(ggplot2)
data_demo$PopUtot <- as.numeric(data_demo$PopUtot)
data_demo$PopU18 <- as.numeric(data_demo$PopU18)
data_demo$PopU5 <- as.numeric(data_demo$PopU5)
country_data <- data_demo[117, ]

long_data <- country_data %>%
  select
pie_data <- data.frame(
  Category = c("Population under 5", "Population under 18", "Others"),
  Values = c(country_data$PopU5, country_data$PopU18, country_data$PopUtot - country_data$PopU5 - country_data$PopU18))
  
ggplot(pie_data, aes(x = "", y = Values, fill = Category)) + 
  geom_bar(width = 1, stat = 'identity') +
  coord_polar("y", start = 0) +
  theme_void()+
  labs(title = paste("Population Breakdown for ", country_data$Countries)) +
  theme(legend.title = element_blank()) +
  scale_fill_brewer(palette = "Pastel1")
```

This is a Pie Chart for the Distribution of Population in Monaco (divisions made on whether an individual is under 5, over 5 but under 18, or over 18). Based on the pie chart we can tell that the majority of the people are over 18 followed by those over 5 but under 18. The % people in Monaco that are not over 18 is around 20%. Hence we can say that most adults in Monaco follow a relatively healthy lifestyle. From the pie chart we can also infer that there is a high percentage of todlers(0-5 years old) and hence the government can make policies to promote health benefits and raise awareness about health issues in children.

## Stacked Bar chart for top 3 countries
```{r, echo = FALSE, message = FALSE, warning = FALSE, cache = FALSE}
library(ggplot2)
library(dplyr)
library(tidyr)

# Assuming the data is already loaded into a variable named 'data_demo'

# Convert the relevant columns to numeric
data_demo$PopUtot <- as.numeric(data_demo$PopUtot)
data_demo$PopU18 <- as.numeric(data_demo$PopU18)
data_demo$PopU5 <- as.numeric(data_demo$PopU5)

# Select countries based on specified row numbers
selected_countries <- data_demo[c(10, 90), ]

# Reshape the data into a long format for plotting
long_data <- selected_countries %>%
  select(Countries, PopUtot, PopU18, PopU5) %>%
  pivot_longer(cols = c("PopU18", "PopU5"), names_to = "Category", values_to = "Values") %>%
  mutate(Category = case_when(
    Category == "PopU18" ~ "Population Under 18",
    Category == "PopU5" ~ "Population Under 5",
    TRUE ~ "Others"
  ))

# Calculate the 'Others' category
long_data$Values[long_data$Category == "Others"] <- with(selected_countries, PopUtot - PopU18 - PopU5)

# Create the stacked bar chart
ggplot(long_data, aes(x = Countries, y = Values, fill = Category)) +
  geom_bar(stat = 'identity') +
  labs(title = "Population Breakdown for Selected Countries",
       x = "Country", y = "Population") +
  scale_fill_brewer(palette = "Pastel1") +
  theme_minimal()

```

This graph is a stacked bar chart that shows a population breakdown for two selected countries, Australia and Japan. The chart has two categories of population displayed in different colors:

- Population Under 5: Shown in blue.
- Population Under 18: Shown in red.
The y-axis represents the population count (though the unit is not specified, it is likely to be in thousands or millions, depending on the data source), while the x-axis lists the two countries being compared.

For each country, the total height of the bar represents the total population under 18, with the segment in blue at the bottom indicating the subset of that population which is under 5 years old. The red segment, therefore, represents the portion of the population that is between 5 and 17 years old.

From the chart, we can observe that Japan has a significantly larger population under 18 compared to Australia. Within both countries, the proportion of the population under 5 is less than the proportion that is between 5 and 17 years old.
